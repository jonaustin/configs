[user]
	name = Jon Austin
	email = jon.i.austin@gmail.com
[github]
	token = 93d49b6e93fe6b3b1ff4f9c901352de2
	user = jonaustin
[color]
  ui = auto
  diff = auto
  status = auto
  branch = auto
  interactive = auto
[core]
	editor = vim
[merge]
  tool = vimdiff
[mergetool "p4merge"]
  cmd = p4merge "$BASE" "$LOCAL" "$REMOTE" "$MERGED"
  keepTemporaries = false
  trustExitCode = false
  keepBackup = false
#[diff]
# external = git_diff_wrapper
[pager]
  diff = #this is needed for vimdiff to work
[pretty]
[gc]
  auto=1 # automatic garbage collection
[merge]
  summary=true # get a summary of the changes youâ€™re merging
[alias]
  co = checkout
  # create a new branch (mnemonic: "git new branch branchname...")
  nb = checkout -b
  cb = checkout -b
  ci = commit
  cim= commit --amend
  br = branch -v
  b = branch -v # show commit messages on branch list
  t = tag -l # show commit messages on tag list
  r = remote -v # show urls of remotes
  stat = status
  st = status
  d  = diff
  ds = diff --staged

  type = cat-file -t
  dump = cat-file -p

  # 'git add -u' handles deleted files, but not new files
  # 'git add .' handles any current and new files, but not deleted
  # 'git addall' now handles all changes
  addall = !sh -c 'git add . && git add -u'

  outgoing = log -u origin/master..master # outgoing changes (in local, but not origin)

  # Handy shortcuts for rebasing
  rc = rebase --continue
  rs = rebase --skip
  ra = rebase --abort

  # copy a commit from another branch with source info
  cp = cherry-pick -x

  # logging
  l  = log
  lp = log --pretty=oneline
  lpg = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
  hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
  histall = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short --all
	lol = log --pretty=oneline --abbrev-commit --graph --decorate
  changes = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\" --name-status
  short = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\"
  filelog = log -u # show changes to a file
  changelog = log --pretty=format:\" * %s\"

  unstage = reset HEAD # un-add files from index (tracking)
  uncommit = reset --soft HEAD^ # go back one commit, put changes into your working dir and index
  chunkyadd = add --patch # stage commits chunk by chunk
  amend = commit --amend # fix last commit
  ammend = commit --amend # for those who can't spell :-)



[remote "mine"]
  url = jon@pittock.legitscript.com:./git/web.git
  fetch = +refs/heads/*:refs/remotes/mine/*
[giggle]
	main-window-maximized = false
	main-window-geometry = 1918x1058+1+21
	history-view-vpane-position = 734
